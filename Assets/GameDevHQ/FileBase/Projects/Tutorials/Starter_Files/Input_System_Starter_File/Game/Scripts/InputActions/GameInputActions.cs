//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.2.0
//     from Assets/GameDevHQ/FileBase/Projects/Tutorials/Starter_Files/Input_System_Starter_File/Game/Scripts/InputActions/GameInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @GameInputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @GameInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""GameInputActions"",
    ""maps"": [
        {
            ""name"": ""PlayerInput"",
            ""id"": ""4fa66429-b31e-4a08-989b-de72570506c4"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""18a088f5-fb4d-4534-ac4d-388473c5b175"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SwitchToDrone"",
                    ""type"": ""Button"",
                    ""id"": ""10968b37-c082-438d-a2fe-1b907c537a4c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""d9578e23-912c-43b5-8f7b-98ea1966ff1f"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""d4b43431-bfb0-4c00-93fd-04ca0cb8ffc8"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""fe0ac25f-13ee-4749-87aa-4083f4c6dd82"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""45d22a04-c66b-47e6-a454-479a6783264d"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""22655d0f-17e4-46df-9817-81d39bd96db7"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrows"",
                    ""id"": ""bfcfe988-d651-4f70-b979-6ef3d31e018b"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""797cc4f7-3aeb-41b5-9627-bf1c11d1db58"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""5d7d3a3b-a11a-4566-9bb1-cd2f30993b0c"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""20204d10-e5db-49f3-b51f-80783256b275"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""b119870b-8d5f-4b07-882b-aa18d47a3597"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""cdf7767c-762c-4c56-b60d-12960e419c7b"",
                    ""path"": ""<Joystick>/stick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""353b8e05-d118-4bb9-bbe8-78f832f4a38f"",
                    ""path"": ""<Keyboard>/n"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchToDrone"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e9d609c9-e09a-4d54-9ec4-af37951fec3f"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchToDrone"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""General"",
            ""id"": ""13b073fd-5bfe-4350-a9c9-0f1fd3188834"",
            ""actions"": [
                {
                    ""name"": ""Ekey"",
                    ""type"": ""Button"",
                    ""id"": ""5ac3d3cf-49f4-45e4-8825-3991f2b3c0c0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Esckey"",
                    ""type"": ""Button"",
                    ""id"": ""87d35050-f8ac-4235-b1cf-b69f2adb537a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""2dc9fa6d-f1d6-4f14-8d6c-8f3f7f1fde34"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": ""Hold(duration=10,pressPoint=1),Tap"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ekey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a4a751a6-1d28-4164-8043-cf79ade09378"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ekey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""85277c60-542a-416d-80c6-975ae1da0240"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": ""Hold(duration=10)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Esckey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""448ec33d-e747-47dc-b135-c133c1893160"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Esckey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Drone"",
            ""id"": ""82246c16-689a-4834-bb3b-4e90fd132113"",
            ""actions"": [
                {
                    ""name"": ""Rotation"",
                    ""type"": ""PassThrough"",
                    ""id"": ""51a57afa-fa62-459f-b0a5-595c81a4eb74"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchToForklift"",
                    ""type"": ""Button"",
                    ""id"": ""8d71bff5-a5c2-4cfa-b28a-a8ba43db2737"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Tilt"",
                    ""type"": ""Value"",
                    ""id"": ""7e0e6cda-00f8-40d3-be4f-ba41b23deb3d"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SpaceKey"",
                    ""type"": ""Button"",
                    ""id"": ""e07f6d73-4c43-4975-ac36-6d56c7f19efe"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""VKey"",
                    ""type"": ""Button"",
                    ""id"": ""825d72ac-215a-44f6-b8d5-8fddfcd9b78d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EscKey"",
                    ""type"": ""Button"",
                    ""id"": ""e519abb0-9071-443c-8c00-c8cd53cecf77"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""c29c2788-b52f-48e4-8aed-a4ac836da0e9"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""c5e5b77a-e9e4-44f5-b2ba-d80d62e1cdb5"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""c24b588d-2216-4f61-ba40-553f3efa4c98"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""6431f98c-ffcb-4c1a-9cb1-fa8124d45bcf"",
                    ""path"": ""<Gamepad>/leftStick/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f7644a8d-1b21-4e62-bff3-749cfabaed0f"",
                    ""path"": ""<Keyboard>/n"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchToForklift"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b32c6f0d-b3d4-430b-8d56-cf310829535e"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchToForklift"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""cdaac401-1cc8-4599-9710-5b9c99460bda"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tilt"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""2045c091-bc32-42ed-99eb-5f84d614337c"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tilt"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""a91d5825-186c-46ec-a5f3-3868353201fc"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tilt"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""831a4a20-be14-4b21-8362-f67ed23e0f6e"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tilt"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""f129c376-a5a3-4caa-bb7f-27f30046b3a7"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tilt"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""5376b058-4e9d-46ba-b2d6-ed67436c6d81"",
                    ""path"": ""<Joystick>/stick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tilt"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3f5cead5-48b5-4cde-8917-176bbb25bc3f"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SpaceKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cc231d61-774b-4a5a-87f4-459ed9a533ec"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SpaceKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""38c82eaa-6d5d-47fb-a4e3-9cf6d1a7be86"",
                    ""path"": ""<Keyboard>/v"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""VKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fc37f399-6a96-4c60-bb6d-7f746c3b2e4b"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""VKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9c9ad115-6ac0-4497-b55a-b7a1a85486f8"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EscKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""de55d743-95ff-4f0b-b81e-c5963986c393"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EscKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Forklift"",
            ""id"": ""623b380b-20f7-4e25-bb66-6fd0f09fc7c6"",
            ""actions"": [
                {
                    ""name"": ""SwitchToPlayer"",
                    ""type"": ""Button"",
                    ""id"": ""16c0dea1-64cb-4d03-9316-03bf7db5d260"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""PassThrough"",
                    ""id"": ""2f28e376-e804-4b87-900b-4cfe8a909717"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LiftUp"",
                    ""type"": ""Button"",
                    ""id"": ""5390933e-30c1-4d16-b9d2-66192a5acab7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LiftDown"",
                    ""type"": ""Button"",
                    ""id"": ""3a4ce737-af2c-44c0-b209-52863a9997b6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Esckey"",
                    ""type"": ""Button"",
                    ""id"": ""9b6758f3-3c73-49e3-aa48-a740fa8645d8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""6413e9ba-0e0b-4600-9c25-eacbeea80f85"",
                    ""path"": ""<Keyboard>/n"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchToPlayer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""04744a3d-62a4-493a-8d49-374dd5898243"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchToPlayer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""db7ced4c-8bea-4703-9500-ba21eb892a6a"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""802c941a-8464-4588-8246-a606e3d59a09"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""9e844580-8b5e-438a-b499-2937923f579b"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""00f71c30-75a0-41c4-9da5-67eab583814b"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""a20deff8-2e32-4cce-91dd-b04c53a66655"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrows"",
                    ""id"": ""d44cf9bc-1e58-42ed-927a-3e0e954cdc39"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""5d64eefb-a0f9-4434-b4bb-b9b8063f9a12"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""c919d2ff-4b79-47fb-8bb5-bfcd9d5617da"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""01452562-6d3f-4cb1-8501-8217eca98420"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""92ddf816-12fa-464d-aeeb-b552b00b4992"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""b4cc5b7d-2059-4178-b12b-5bbde315962a"",
                    ""path"": ""<Joystick>/stick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4a5318ea-e45e-4244-9e2f-99fea326274d"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LiftUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""618e40ca-2e0f-4000-8af3-6f7446b61d2c"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LiftUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""435e59bb-db60-4b14-ace6-0c7be70c054b"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LiftDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1bbc64fc-2967-4202-9650-c29755ec667f"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LiftDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""15cc4a51-b695-46ba-97f2-a7b7616d8618"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": ""Hold(duration=10)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Esckey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f418000d-d0d5-4115-a013-e586fdb5546a"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Esckey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Crate"",
            ""id"": ""806dd682-92d1-4aad-98ef-76de67a1595b"",
            ""actions"": [
                {
                    ""name"": ""Explode"",
                    ""type"": ""Button"",
                    ""id"": ""cfbaf1f5-fdcc-49b3-abbb-e6629625bd56"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""21739bb1-af39-4e93-b02a-63a876005dce"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": ""MultiTap,Hold(duration=10)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Explode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""afc93601-5686-42f6-a582-1df8ec46f44f"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Explode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // PlayerInput
        m_PlayerInput = asset.FindActionMap("PlayerInput", throwIfNotFound: true);
        m_PlayerInput_Move = m_PlayerInput.FindAction("Move", throwIfNotFound: true);
        m_PlayerInput_SwitchToDrone = m_PlayerInput.FindAction("SwitchToDrone", throwIfNotFound: true);
        // General
        m_General = asset.FindActionMap("General", throwIfNotFound: true);
        m_General_Ekey = m_General.FindAction("Ekey", throwIfNotFound: true);
        m_General_Esckey = m_General.FindAction("Esckey", throwIfNotFound: true);
        // Drone
        m_Drone = asset.FindActionMap("Drone", throwIfNotFound: true);
        m_Drone_Rotation = m_Drone.FindAction("Rotation", throwIfNotFound: true);
        m_Drone_SwitchToForklift = m_Drone.FindAction("SwitchToForklift", throwIfNotFound: true);
        m_Drone_Tilt = m_Drone.FindAction("Tilt", throwIfNotFound: true);
        m_Drone_SpaceKey = m_Drone.FindAction("SpaceKey", throwIfNotFound: true);
        m_Drone_VKey = m_Drone.FindAction("VKey", throwIfNotFound: true);
        m_Drone_EscKey = m_Drone.FindAction("EscKey", throwIfNotFound: true);
        // Forklift
        m_Forklift = asset.FindActionMap("Forklift", throwIfNotFound: true);
        m_Forklift_SwitchToPlayer = m_Forklift.FindAction("SwitchToPlayer", throwIfNotFound: true);
        m_Forklift_Move = m_Forklift.FindAction("Move", throwIfNotFound: true);
        m_Forklift_LiftUp = m_Forklift.FindAction("LiftUp", throwIfNotFound: true);
        m_Forklift_LiftDown = m_Forklift.FindAction("LiftDown", throwIfNotFound: true);
        m_Forklift_Esckey = m_Forklift.FindAction("Esckey", throwIfNotFound: true);
        // Crate
        m_Crate = asset.FindActionMap("Crate", throwIfNotFound: true);
        m_Crate_Explode = m_Crate.FindAction("Explode", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerInput
    private readonly InputActionMap m_PlayerInput;
    private IPlayerInputActions m_PlayerInputActionsCallbackInterface;
    private readonly InputAction m_PlayerInput_Move;
    private readonly InputAction m_PlayerInput_SwitchToDrone;
    public struct PlayerInputActions
    {
        private @GameInputActions m_Wrapper;
        public PlayerInputActions(@GameInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_PlayerInput_Move;
        public InputAction @SwitchToDrone => m_Wrapper.m_PlayerInput_SwitchToDrone;
        public InputActionMap Get() { return m_Wrapper.m_PlayerInput; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerInputActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerInputActions instance)
        {
            if (m_Wrapper.m_PlayerInputActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_PlayerInputActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_PlayerInputActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_PlayerInputActionsCallbackInterface.OnMove;
                @SwitchToDrone.started -= m_Wrapper.m_PlayerInputActionsCallbackInterface.OnSwitchToDrone;
                @SwitchToDrone.performed -= m_Wrapper.m_PlayerInputActionsCallbackInterface.OnSwitchToDrone;
                @SwitchToDrone.canceled -= m_Wrapper.m_PlayerInputActionsCallbackInterface.OnSwitchToDrone;
            }
            m_Wrapper.m_PlayerInputActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @SwitchToDrone.started += instance.OnSwitchToDrone;
                @SwitchToDrone.performed += instance.OnSwitchToDrone;
                @SwitchToDrone.canceled += instance.OnSwitchToDrone;
            }
        }
    }
    public PlayerInputActions @PlayerInput => new PlayerInputActions(this);

    // General
    private readonly InputActionMap m_General;
    private IGeneralActions m_GeneralActionsCallbackInterface;
    private readonly InputAction m_General_Ekey;
    private readonly InputAction m_General_Esckey;
    public struct GeneralActions
    {
        private @GameInputActions m_Wrapper;
        public GeneralActions(@GameInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Ekey => m_Wrapper.m_General_Ekey;
        public InputAction @Esckey => m_Wrapper.m_General_Esckey;
        public InputActionMap Get() { return m_Wrapper.m_General; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GeneralActions set) { return set.Get(); }
        public void SetCallbacks(IGeneralActions instance)
        {
            if (m_Wrapper.m_GeneralActionsCallbackInterface != null)
            {
                @Ekey.started -= m_Wrapper.m_GeneralActionsCallbackInterface.OnEkey;
                @Ekey.performed -= m_Wrapper.m_GeneralActionsCallbackInterface.OnEkey;
                @Ekey.canceled -= m_Wrapper.m_GeneralActionsCallbackInterface.OnEkey;
                @Esckey.started -= m_Wrapper.m_GeneralActionsCallbackInterface.OnEsckey;
                @Esckey.performed -= m_Wrapper.m_GeneralActionsCallbackInterface.OnEsckey;
                @Esckey.canceled -= m_Wrapper.m_GeneralActionsCallbackInterface.OnEsckey;
            }
            m_Wrapper.m_GeneralActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Ekey.started += instance.OnEkey;
                @Ekey.performed += instance.OnEkey;
                @Ekey.canceled += instance.OnEkey;
                @Esckey.started += instance.OnEsckey;
                @Esckey.performed += instance.OnEsckey;
                @Esckey.canceled += instance.OnEsckey;
            }
        }
    }
    public GeneralActions @General => new GeneralActions(this);

    // Drone
    private readonly InputActionMap m_Drone;
    private IDroneActions m_DroneActionsCallbackInterface;
    private readonly InputAction m_Drone_Rotation;
    private readonly InputAction m_Drone_SwitchToForklift;
    private readonly InputAction m_Drone_Tilt;
    private readonly InputAction m_Drone_SpaceKey;
    private readonly InputAction m_Drone_VKey;
    private readonly InputAction m_Drone_EscKey;
    public struct DroneActions
    {
        private @GameInputActions m_Wrapper;
        public DroneActions(@GameInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Rotation => m_Wrapper.m_Drone_Rotation;
        public InputAction @SwitchToForklift => m_Wrapper.m_Drone_SwitchToForklift;
        public InputAction @Tilt => m_Wrapper.m_Drone_Tilt;
        public InputAction @SpaceKey => m_Wrapper.m_Drone_SpaceKey;
        public InputAction @VKey => m_Wrapper.m_Drone_VKey;
        public InputAction @EscKey => m_Wrapper.m_Drone_EscKey;
        public InputActionMap Get() { return m_Wrapper.m_Drone; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DroneActions set) { return set.Get(); }
        public void SetCallbacks(IDroneActions instance)
        {
            if (m_Wrapper.m_DroneActionsCallbackInterface != null)
            {
                @Rotation.started -= m_Wrapper.m_DroneActionsCallbackInterface.OnRotation;
                @Rotation.performed -= m_Wrapper.m_DroneActionsCallbackInterface.OnRotation;
                @Rotation.canceled -= m_Wrapper.m_DroneActionsCallbackInterface.OnRotation;
                @SwitchToForklift.started -= m_Wrapper.m_DroneActionsCallbackInterface.OnSwitchToForklift;
                @SwitchToForklift.performed -= m_Wrapper.m_DroneActionsCallbackInterface.OnSwitchToForklift;
                @SwitchToForklift.canceled -= m_Wrapper.m_DroneActionsCallbackInterface.OnSwitchToForklift;
                @Tilt.started -= m_Wrapper.m_DroneActionsCallbackInterface.OnTilt;
                @Tilt.performed -= m_Wrapper.m_DroneActionsCallbackInterface.OnTilt;
                @Tilt.canceled -= m_Wrapper.m_DroneActionsCallbackInterface.OnTilt;
                @SpaceKey.started -= m_Wrapper.m_DroneActionsCallbackInterface.OnSpaceKey;
                @SpaceKey.performed -= m_Wrapper.m_DroneActionsCallbackInterface.OnSpaceKey;
                @SpaceKey.canceled -= m_Wrapper.m_DroneActionsCallbackInterface.OnSpaceKey;
                @VKey.started -= m_Wrapper.m_DroneActionsCallbackInterface.OnVKey;
                @VKey.performed -= m_Wrapper.m_DroneActionsCallbackInterface.OnVKey;
                @VKey.canceled -= m_Wrapper.m_DroneActionsCallbackInterface.OnVKey;
                @EscKey.started -= m_Wrapper.m_DroneActionsCallbackInterface.OnEscKey;
                @EscKey.performed -= m_Wrapper.m_DroneActionsCallbackInterface.OnEscKey;
                @EscKey.canceled -= m_Wrapper.m_DroneActionsCallbackInterface.OnEscKey;
            }
            m_Wrapper.m_DroneActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Rotation.started += instance.OnRotation;
                @Rotation.performed += instance.OnRotation;
                @Rotation.canceled += instance.OnRotation;
                @SwitchToForklift.started += instance.OnSwitchToForklift;
                @SwitchToForklift.performed += instance.OnSwitchToForklift;
                @SwitchToForklift.canceled += instance.OnSwitchToForklift;
                @Tilt.started += instance.OnTilt;
                @Tilt.performed += instance.OnTilt;
                @Tilt.canceled += instance.OnTilt;
                @SpaceKey.started += instance.OnSpaceKey;
                @SpaceKey.performed += instance.OnSpaceKey;
                @SpaceKey.canceled += instance.OnSpaceKey;
                @VKey.started += instance.OnVKey;
                @VKey.performed += instance.OnVKey;
                @VKey.canceled += instance.OnVKey;
                @EscKey.started += instance.OnEscKey;
                @EscKey.performed += instance.OnEscKey;
                @EscKey.canceled += instance.OnEscKey;
            }
        }
    }
    public DroneActions @Drone => new DroneActions(this);

    // Forklift
    private readonly InputActionMap m_Forklift;
    private IForkliftActions m_ForkliftActionsCallbackInterface;
    private readonly InputAction m_Forklift_SwitchToPlayer;
    private readonly InputAction m_Forklift_Move;
    private readonly InputAction m_Forklift_LiftUp;
    private readonly InputAction m_Forklift_LiftDown;
    private readonly InputAction m_Forklift_Esckey;
    public struct ForkliftActions
    {
        private @GameInputActions m_Wrapper;
        public ForkliftActions(@GameInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @SwitchToPlayer => m_Wrapper.m_Forklift_SwitchToPlayer;
        public InputAction @Move => m_Wrapper.m_Forklift_Move;
        public InputAction @LiftUp => m_Wrapper.m_Forklift_LiftUp;
        public InputAction @LiftDown => m_Wrapper.m_Forklift_LiftDown;
        public InputAction @Esckey => m_Wrapper.m_Forklift_Esckey;
        public InputActionMap Get() { return m_Wrapper.m_Forklift; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ForkliftActions set) { return set.Get(); }
        public void SetCallbacks(IForkliftActions instance)
        {
            if (m_Wrapper.m_ForkliftActionsCallbackInterface != null)
            {
                @SwitchToPlayer.started -= m_Wrapper.m_ForkliftActionsCallbackInterface.OnSwitchToPlayer;
                @SwitchToPlayer.performed -= m_Wrapper.m_ForkliftActionsCallbackInterface.OnSwitchToPlayer;
                @SwitchToPlayer.canceled -= m_Wrapper.m_ForkliftActionsCallbackInterface.OnSwitchToPlayer;
                @Move.started -= m_Wrapper.m_ForkliftActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_ForkliftActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_ForkliftActionsCallbackInterface.OnMove;
                @LiftUp.started -= m_Wrapper.m_ForkliftActionsCallbackInterface.OnLiftUp;
                @LiftUp.performed -= m_Wrapper.m_ForkliftActionsCallbackInterface.OnLiftUp;
                @LiftUp.canceled -= m_Wrapper.m_ForkliftActionsCallbackInterface.OnLiftUp;
                @LiftDown.started -= m_Wrapper.m_ForkliftActionsCallbackInterface.OnLiftDown;
                @LiftDown.performed -= m_Wrapper.m_ForkliftActionsCallbackInterface.OnLiftDown;
                @LiftDown.canceled -= m_Wrapper.m_ForkliftActionsCallbackInterface.OnLiftDown;
                @Esckey.started -= m_Wrapper.m_ForkliftActionsCallbackInterface.OnEsckey;
                @Esckey.performed -= m_Wrapper.m_ForkliftActionsCallbackInterface.OnEsckey;
                @Esckey.canceled -= m_Wrapper.m_ForkliftActionsCallbackInterface.OnEsckey;
            }
            m_Wrapper.m_ForkliftActionsCallbackInterface = instance;
            if (instance != null)
            {
                @SwitchToPlayer.started += instance.OnSwitchToPlayer;
                @SwitchToPlayer.performed += instance.OnSwitchToPlayer;
                @SwitchToPlayer.canceled += instance.OnSwitchToPlayer;
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @LiftUp.started += instance.OnLiftUp;
                @LiftUp.performed += instance.OnLiftUp;
                @LiftUp.canceled += instance.OnLiftUp;
                @LiftDown.started += instance.OnLiftDown;
                @LiftDown.performed += instance.OnLiftDown;
                @LiftDown.canceled += instance.OnLiftDown;
                @Esckey.started += instance.OnEsckey;
                @Esckey.performed += instance.OnEsckey;
                @Esckey.canceled += instance.OnEsckey;
            }
        }
    }
    public ForkliftActions @Forklift => new ForkliftActions(this);

    // Crate
    private readonly InputActionMap m_Crate;
    private ICrateActions m_CrateActionsCallbackInterface;
    private readonly InputAction m_Crate_Explode;
    public struct CrateActions
    {
        private @GameInputActions m_Wrapper;
        public CrateActions(@GameInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Explode => m_Wrapper.m_Crate_Explode;
        public InputActionMap Get() { return m_Wrapper.m_Crate; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CrateActions set) { return set.Get(); }
        public void SetCallbacks(ICrateActions instance)
        {
            if (m_Wrapper.m_CrateActionsCallbackInterface != null)
            {
                @Explode.started -= m_Wrapper.m_CrateActionsCallbackInterface.OnExplode;
                @Explode.performed -= m_Wrapper.m_CrateActionsCallbackInterface.OnExplode;
                @Explode.canceled -= m_Wrapper.m_CrateActionsCallbackInterface.OnExplode;
            }
            m_Wrapper.m_CrateActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Explode.started += instance.OnExplode;
                @Explode.performed += instance.OnExplode;
                @Explode.canceled += instance.OnExplode;
            }
        }
    }
    public CrateActions @Crate => new CrateActions(this);
    public interface IPlayerInputActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnSwitchToDrone(InputAction.CallbackContext context);
    }
    public interface IGeneralActions
    {
        void OnEkey(InputAction.CallbackContext context);
        void OnEsckey(InputAction.CallbackContext context);
    }
    public interface IDroneActions
    {
        void OnRotation(InputAction.CallbackContext context);
        void OnSwitchToForklift(InputAction.CallbackContext context);
        void OnTilt(InputAction.CallbackContext context);
        void OnSpaceKey(InputAction.CallbackContext context);
        void OnVKey(InputAction.CallbackContext context);
        void OnEscKey(InputAction.CallbackContext context);
    }
    public interface IForkliftActions
    {
        void OnSwitchToPlayer(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnLiftUp(InputAction.CallbackContext context);
        void OnLiftDown(InputAction.CallbackContext context);
        void OnEsckey(InputAction.CallbackContext context);
    }
    public interface ICrateActions
    {
        void OnExplode(InputAction.CallbackContext context);
    }
}
